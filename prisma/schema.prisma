// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id String @id @default(uuid())
  email String @unique
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  preferences CompanyPreference?
  users  User[]
  userRoles UserRole[]
}

model CompanyPreference {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companyId String @unique
  company  Company  @relation(fields: [companyId], references: [id])
}

model UserRole {
  id String @id @default(uuid())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companyId String? @unique
  company  Company?  @relation(fields: [companyId], references: [id])

  users User[]

  isAdmin Boolean @default(false)
}



model User {
  id String @id @default(uuid())
  email String @unique
  name String
  active Boolean @default(true) 
  acceptedInvitation Boolean @default(false) 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companyId String 
  company  Company  @relation(fields: [companyId], references: [id])

  userRoleId String 
  userRole  UserRole  @relation(fields: [userRoleId], references: [id])
}


model Token {
  id String @id @default(uuid())
  type String
  identifier String @default(uuid())
  entityName String
  entityId String
  expiredAt DateTime @default(dbgenerated("now() + interval '48 hours'"))
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}